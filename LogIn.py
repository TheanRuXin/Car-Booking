
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\User\Documents\Ruxin file\build\build\assets\frame2")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

# from tkinter import *
# Explicit imports to satisfy Flake8
import sqlite3
from tkinter import Tk, Canvas, Entry,Text, Button, messagebox, PhotoImage

#Fuction to Log In a user
def LogIn_user(window):
    conn = sqlite3.connect('Users.db')
    c = conn.cursor()

    email = entry_1.get().strip()
    password = entry_2.get().strip()

    #Validate input
    if not email or not password:
        messagebox.showerror("Error","Email and Password are required!")
        conn.close()
        return

    c.execute("SELECT * FROM Users WHERE email = ? AND password = ?", (email, password))
    result = c.fetchone()

    if result:
        messagebox.showinfo("Success","LogIn successful!")
        window.destroy()
        show_dashboard()

    else:
        messagebox.showerror("Error","Invalid email or password!")
        window.destroy()
        from FristPage import show_FristPage_page
        show_FristPage_page()
    
    conn.close()
# Function to show the dashboard
def show_dashboard():
    dashboard = Tk()
    dashboard.geometry("800x500")
    dashboard.configure(bg="#81BEEB")
    dashboard.title("User Dashboard")

    dashboard_label = Canvas(dashboard, bg="#81BEEB", height=300, width=400, bd=0, highlightthickness=0, relief="ridge")
    dashboard_label.create_text(200, 100, text="Welcome to the Dashboard!", font=("Arial", 20), fill="#000000")
    dashboard_label.pack()

    # Logout button
    logout_button = Button(dashboard, text="Logout", bg="#FF0000", fg="#FFFFFF", font=("Arial", 14),
                           command=lambda: logout(dashboard))
    logout_button.pack(pady=20)

    dashboard.mainloop()

# Function to logout
def logout(dashboard):
    dashboard.destroy()
    show_login_page()


#Login page
def show_LogIn_page():
    global entry_1,entry_2
    
    window = Tk()
    window.geometry("1029x679")
    window.configure(bg = "#FFFFFF")
    
    canvas = Canvas(window,bg = "#FFFFFF",height = 679,width = 1029,bd = 0,highlightthickness = 0,relief = "ridge")
    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(514.0,339.0,image=image_image_1)
    
    canvas.create_text(251.0,209.0,anchor="nw",text="Email:",fill="#000000",font=("Inter Bold", 48 * -1))
    entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(528.5,290.0,image=entry_image_1)
    entry_1 = Entry(bd=3,bg="#FFFFFF",fg="#000716",highlightthickness=0,font=("Inter Bold", 30))
    entry_1.place(x=251.0,y=266.0,width=555.0,height=46.0)
    canvas.create_text(251.0,340.0,anchor="nw",text="Password:",fill="#000000",font=("Inter Bold", 48 * -1))
    entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(528.5,415.0,image=entry_image_2)
    
    entry_2 = Entry(bd=3,bg="#FFFFFF",fg="#000716",highlightthickness=0,show="*",font=("Inter Bold", 30))
    entry_2.place(x=251.0,y=391.0,width=555.0,height=46.0)
    
    canvas.create_text(365.0,77.0,anchor="nw",text="Log in",fill="#000000",font=("Inter Bold", 60 * -1))
    
    button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
    button_1 = Button(image=button_image_1, borderwidth=0,highlightthickness=0,command=lambda:LogIn_user(window),relief="flat")
    
    button_1.place(x=445.0,y=534.0,width=146.025390625,height=54.92308807373047)
    
    window.resizable(False, False)
    window.mainloop()

if __name__ == "__main__":
    show_LogIn_page()